{"version":3,"sources":["../../src/hooks/logger.js"],"names":["logger","require","module","exports","hook","message","type","path","method","error","info","debug","data","params","result"],"mappings":";;AAAA;AACA,IAAMA,SAASC,QAAQ,SAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;AAC3B,SAAO,UAAUC,IAAV,EAAgB;AACrB,QAAIC,UAAaD,KAAKE,IAAlB,UAA2BF,KAAKG,IAAhC,mBAAkDH,KAAKI,MAA3D;;AAEA,QAAIJ,KAAKE,IAAL,KAAc,OAAlB,EAA2B;AACzBD,wBAAgBD,KAAKK,KAAL,CAAWJ,OAA3B;AACD;;AAEDL,WAAOU,IAAP,CAAYL,OAAZ;AACAL,WAAOW,KAAP,CAAa,WAAb,EAA0BP,KAAKQ,IAA/B;AACAZ,WAAOW,KAAP,CAAa,aAAb,EAA4BP,KAAKS,MAAjC;;AAEA,QAAIT,KAAKU,MAAT,EAAiB;AACfd,aAAOW,KAAP,CAAa,aAAb,EAA4BP,KAAKU,MAAjC;AACD;;AAED,QAAIV,KAAKK,KAAT,EAAgB;AACdT,aAAOS,KAAP,CAAaL,KAAKK,KAAlB;AACD;AACF,GAlBD;AAmBD,CApBD","file":"logger.js","sourcesContent":["// A hook that logs service method before, after and error\nconst logger = require('winston');\n\nmodule.exports = function () {\n  return function (hook) {\n    let message = `${hook.type}: ${hook.path} - Method: ${hook.method}`;\n\n    if (hook.type === 'error') {\n      message += `: ${hook.error.message}`;\n    }\n\n    logger.info(message);\n    logger.debug('hook.data', hook.data);\n    logger.debug('hook.params', hook.params);\n\n    if (hook.result) {\n      logger.debug('hook.result', hook.result);\n    }\n\n    if (hook.error) {\n      logger.error(hook.error);\n    }\n  };\n};\n"]}