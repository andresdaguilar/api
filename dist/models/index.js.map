{"version":3,"sources":["../../src/models/index.js"],"names":["articleSchema","title","String","author","lede","body","translations","language","date","type","Date","default","now","plugin","categorySchema","name","countrySchema","content","category","Types","ObjectId","ref","autopopulate","required","articles","countryCategorySchema","country","index","Number","Article","db","model","Category","Country","CountryCategory"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,gBAAgB,qBAAW;AAC3BC,WAAOC,MADoB;AAE3BC,YAAQD,MAFmB;AAG3BE,UAAMF,MAHqB;AAI3BG,UAAMH,MAJqB;AAK3BI,kBAAc,CAAC;AACXL,eAAOC,MADI;AAEXE,cAAMF,MAFK;AAGXG,cAAMH,MAHK;AAIXK,kBAAUL;AAJC,KAAD,CALa;AAW3BM,UAAM,EAAEC,MAAMC,IAAR,EAAcC,SAASD,KAAKE,GAA5B;AAXqB,CAAX,CAApB;AAaAZ,cAAca,MAAd;;AAEA,IAAIC,iBAAiB,qBAAW;AAC5BC,UAAMb,MADsB;AAE5BI,kBAAc,CAAC;AACXC,kBAAUL,MADC;AAEXa,cAAMb;AAFK,KAAD;AAFc,CAAX,CAArB;;AAQA,IAAIc,gBAAgB,qBAAW;AAC3BD,UAAMb,MADqB;AAE3BI,kBAAc,CAAC;AACXC,kBAAUL,MADC;AAEXa,cAAMb;AAFK,KAAD,CAFa;AAM3Be,aAAS,CAAC;AACNC,kBAAU,EAAET,MAAM,iBAAOU,KAAP,CAAaC,QAArB,EAA+BC,KAAK,UAApC,EAAgDC,cAAc,IAA9D,EAAoEC,UAAU,IAA9E,EADJ;AAENC,kBAAU,CAAC,EAAEf,MAAM,iBAAOU,KAAP,CAAaC,QAArB,EAA+BC,KAAK,SAApC,EAA+CC,cAAc,EAAC,UAAU,CAAC,OAAD,EAAU,MAAV,EAAkB,mBAAlB,EAAuC,uBAAvC,EAAgE,oBAAhE,CAAX,EAA7D,EAAD;AAFJ,KAAD;AANkB,CAAX,CAApB;AAWAN,cAAcH,MAAd;;AAGA,IAAIY,wBAAwB,qBAAW;AACnCP,cAAU,EAAET,MAAM,iBAAOU,KAAP,CAAaC,QAArB,EAA+BC,KAAK,UAApC,EAAgDC,cAAc,IAA9D,EAAoEC,UAAU,IAA9E,EADyB;AAEnCG,aAAS,EAAEjB,MAAM,iBAAOU,KAAP,CAAaC,QAArB,EAA+BC,KAAK,SAApC,EAA+CC,cAAc,IAA7D,EAAmEC,UAAU,IAA7E,EAF0B;AAGnCC,cAAU,CAAC,EAAEf,MAAM,iBAAOU,KAAP,CAAaC,QAArB,EAA+BC,KAAK,SAApC,EAA+CC,cAAc,IAA7D,EAAD,CAHyB;AAInCK,WAAOC;AAJ4B,CAAX,CAA5B;AAMAH,sBAAsBZ,MAAtB;;AAEA,IAAMgB,UAAU,SAAVA,OAAU,CAACC,EAAD;AAAA,WAAQA,GAAGC,KAAH,CAAS,SAAT,EAAoB/B,aAApB,CAAR;AAAA,CAAhB;AACA,IAAMgC,WAAW,SAAXA,QAAW,CAACF,EAAD;AAAA,WAAQA,GAAGC,KAAH,CAAS,UAAT,EAAqBjB,cAArB,CAAR;AAAA,CAAjB;AACA,IAAMmB,UAAU,SAAVA,OAAU,CAACH,EAAD;AAAA,WAAQA,GAAGC,KAAH,CAAS,SAAT,EAAoBf,aAApB,CAAR;AAAA,CAAhB;AACA,IAAMkB,kBAAkB,SAAlBA,eAAkB,CAACJ,EAAD;AAAA,WAAQA,GAAGC,KAAH,CAAS,iBAAT,EAA4BN,qBAA5B,CAAR;AAAA,CAAxB;;kBAEe;AACXI,oBADW;AAEXG,sBAFW;AAGXC,oBAHW;AAIXC;AAJW,C","file":"index.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport autopopulate from 'mongoose-autopopulate'\n\nvar articleSchema = new Schema({\n    title: String,\n    author: String,\n    lede: String,\n    body: String,\n    translations: [{\n        title: String,\n        lede: String,\n        body: String,\n        language: String\n    }],\n    date: { type: Date, default: Date.now },\n});\narticleSchema.plugin(autopopulate);\n\nvar categorySchema = new Schema({\n    name: String,\n    translations: [{\n        language: String,\n        name: String,\n    }]\n});\n\nvar countrySchema = new Schema({\n    name: String,\n    translations: [{\n        language: String,\n        name: String,\n    }],\n    content: [{\n        category: { type: Schema.Types.ObjectId, ref: 'Category', autopopulate: true, required: true },\n        articles: [{ type: Schema.Types.ObjectId, ref: 'Article', autopopulate: {'select': ['title', 'lede', 'translations.lede', \"translations.language\", \"translations.title\"]} },],\n    }]\n});\ncountrySchema.plugin(autopopulate);\n\n\nvar countryCategorySchema = new Schema({\n    category: { type: Schema.Types.ObjectId, ref: 'Category', autopopulate: true, required: true },\n    country: { type: Schema.Types.ObjectId, ref: 'Country', autopopulate: true, required: true },\n    articles: [{ type: Schema.Types.ObjectId, ref: 'Article', autopopulate: true },],\n    index: Number,\n});\ncountryCategorySchema.plugin(autopopulate);\n\nconst Article = (db) => db.model('Article', articleSchema);\nconst Category = (db) => db.model('Category', categorySchema);\nconst Country = (db) => db.model('Country', countrySchema);\nconst CountryCategory = (db) => db.model('CountryCategory', countryCategorySchema);\n\nexport default {\n    Article,\n    Category,\n    Country,\n    CountryCategory,\n};"]}